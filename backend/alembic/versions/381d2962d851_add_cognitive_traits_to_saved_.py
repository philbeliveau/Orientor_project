"""add cognitive traits to saved_recommendations

Revision ID: 381d2962d851
Revises: d7662b16ae56
Create Date: 2025-04-18 10:10:19.702270

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '381d2962d851'
down_revision: Union[str, None] = 'd7662b16ae56'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('saved_recommendations', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('saved_recommendations', 'saved_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('saved_recommendations', 'all_fields',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_index('ix_saved_recommendations_user_id', table_name='saved_recommendations')
    op.create_index(op.f('ix_saved_recommendations_id'), 'saved_recommendations', ['id'], unique=False)
    op.drop_index('ix_user_notes_saved_recommendation_id', table_name='user_notes')
    op.drop_index('ix_user_notes_user_id', table_name='user_notes')
    op.create_index(op.f('ix_user_notes_id'), 'user_notes', ['id'], unique=False)
    op.alter_column('user_profiles', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_user_profiles_user_id', table_name='user_profiles')
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_unique_constraint(None, 'user_profiles', ['user_id'])
    op.drop_column('user_profiles', 'embedding')
    op.alter_column('user_skills', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_skills', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user_skills', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_skills', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('user_profiles', sa.Column('embedding', postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_profiles', type_='unique')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.create_index('ix_user_profiles_user_id', 'user_profiles', ['user_id'], unique=False)
    op.alter_column('user_profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_profiles', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_user_notes_id'), table_name='user_notes')
    op.create_index('ix_user_notes_user_id', 'user_notes', ['user_id'], unique=False)
    op.create_index('ix_user_notes_saved_recommendation_id', 'user_notes', ['saved_recommendation_id'], unique=False)
    op.drop_index(op.f('ix_saved_recommendations_id'), table_name='saved_recommendations')
    op.create_index('ix_saved_recommendations_user_id', 'saved_recommendations', ['user_id'], unique=False)
    op.alter_column('saved_recommendations', 'all_fields',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('saved_recommendations', 'saved_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('saved_recommendations', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
